
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.0
 * Query Engine version: 9c30299f5a0ea26a96790e13f796dc6094db3173
 */
Prisma.prismaVersion = {
  client: "6.11.0",
  engine: "9c30299f5a0ea26a96790e13f796dc6094db3173"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.User_accountScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
  role: 'role',
  referral_code: 'referral_code',
  referred_by_code: 'referred_by_code',
  imgProfile: 'imgProfile',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.User_profileScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  user_fullname: 'user_fullname',
  user_date_of_birth: 'user_date_of_birth',
  user_phone: 'user_phone',
  user_profile_image: 'user_profile_image'
};

exports.Prisma.User_pointsScalarFieldEnum = {
  id: 'id',
  points: 'points',
  points_source_type: 'points_source_type',
  points_source_id: 'points_source_id',
  earned_at: 'earned_at',
  expires_at: 'expires_at',
  points_remaining: 'points_remaining',
  user_id: 'user_id'
};

exports.Prisma.Points_redemptionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  total_points: 'total_points',
  redeemed_at: 'redeemed_at'
};

exports.Prisma.Points_redemption_itemsScalarFieldEnum = {
  id: 'id',
  user_point_id: 'user_point_id',
  redemption_id: 'redemption_id'
};

exports.Prisma.Coupon_tableScalarFieldEnum = {
  id: 'id',
<<<<<<< HEAD
  event_id: 'event_id',
  code: 'code',
  discount_type: 'discount_type',
  discount_value: 'discount_value',
  created_at: 'created_at',
  expires_at: 'expires_at',
  used_at: 'used_at',
  usage_limit: 'usage_limit',
  used_count: 'used_count',
  status: 'status',
  issued_by: 'issued_by'
};

exports.Prisma.User_couponScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  coupon_id: 'coupon_id',
  used_at: 'used_at'
=======
  user_id: 'user_id',
  created_at: 'created_at',
  expires_at: 'expires_at',
  used_at: 'used_at',
  status: 'status',
  coupon_amount: 'coupon_amount'
>>>>>>> 9a59f75a485c1a24980ffc3127dc75599254f5c3
};

exports.Prisma.Organizer_accountScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
<<<<<<< HEAD
  role: 'role'
=======
  is_admin: 'is_admin'
>>>>>>> 9a59f75a485c1a24980ffc3127dc75599254f5c3
};

exports.Prisma.Organizer_profileScalarFieldEnum = {
  id: 'id',
  organizer_id: 'organizer_id',
  organizer_name: 'organizer_name',
  organizer_address: 'organizer_address',
  organizer_phone: 'organizer_phone',
  organizer_profile_image: 'organizer_profile_image'
};

exports.Prisma.Organizer_reviewsScalarFieldEnum = {
  id: 'id',
  organizer_id: 'organizer_id',
  event_id: 'event_id',
  user_id: 'user_id',
  rating: 'rating',
  review: 'review',
  created_at: 'created_at'
};

exports.Prisma.Event_tableScalarFieldEnum = {
  id: 'id',
  organizer_id: 'organizer_id',
  name: 'name',
  price: 'price',
  start_date: 'start_date',
  end_date: 'end_date',
  seat_capacity: 'seat_capacity',
  event_type: 'event_type',
  created_at: 'created_at'
};

exports.Prisma.Ticket_holdsScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  user_id: 'user_id',
  ticket_type_id: 'ticket_type_id',
  ticket_quantity: 'ticket_quantity',
  held_at: 'held_at',
  expires_at: 'expires_at',
  transactions_id: 'transactions_id',
  status: 'status'
};

exports.Prisma.Ticket_typeScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  type_name: 'type_name',
  price: 'price',
  quota: 'quota'
};

exports.Prisma.Event_attendeesScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  organizer_id: 'organizer_id',
  user_id: 'user_id',
  ticket_quantity: 'ticket_quantity',
  total_price_paid: 'total_price_paid',
  status: 'status'
};

exports.Prisma.Transactions_tableScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  event_id: 'event_id',
  voucher_id: 'voucher_id',
  created_at: 'created_at',
  status: 'status',
  payment_proof_url: 'payment_proof_url'
};

exports.Prisma.Voucher_tableScalarFieldEnum = {
  id: 'id',
  organizer_id: 'organizer_id',
  event_id: 'event_id',
  start_at: 'start_at',
  expires_at: 'expires_at',
<<<<<<< HEAD
  usage_limit: 'usage_limit',
  discount_type: 'discount_type',
  discount_value: 'discount_value'
=======
  usage_limit: 'usage_limit'
>>>>>>> 9a59f75a485c1a24980ffc3127dc75599254f5c3
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
<<<<<<< HEAD
exports.account_role = exports.$Enums.account_role = {
=======
exports.ACCOUNT_ROLE = exports.$Enums.ACCOUNT_ROLE = {
>>>>>>> 9a59f75a485c1a24980ffc3127dc75599254f5c3
  user: 'user',
  organizer: 'organizer',
  admin: 'admin'
};

<<<<<<< HEAD
exports.discount_type = exports.$Enums.discount_type = {
  fixed: 'fixed',
  percentage: 'percentage'
};

exports.coupon_status = exports.$Enums.coupon_status = {
=======
exports.STATUS = exports.$Enums.STATUS = {
>>>>>>> 9a59f75a485c1a24980ffc3127dc75599254f5c3
  active: 'active',
  used: 'used',
  expired: 'expired'
};

<<<<<<< HEAD
exports.issuer = exports.$Enums.issuer = {
  system: 'system',
  organizer: 'organizer',
  admin: 'admin'
};

exports.event_status = exports.$Enums.event_status = {
=======
exports.EVENT_STATUS = exports.$Enums.EVENT_STATUS = {
>>>>>>> 9a59f75a485c1a24980ffc3127dc75599254f5c3
  attended: 'attended',
  expired: 'expired',
  cancelled: 'cancelled'
};

<<<<<<< HEAD
exports.transactions_status = exports.$Enums.transactions_status = {
=======
exports.transactions_STATUS = exports.$Enums.transactions_STATUS = {
>>>>>>> 9a59f75a485c1a24980ffc3127dc75599254f5c3
  waiting_for_payment: 'waiting_for_payment',
  waiting_for_admin_confirmation: 'waiting_for_admin_confirmation',
  rejected: 'rejected',
  done: 'done',
  expired: 'expired',
  canceled: 'canceled'
};

exports.Prisma.ModelName = {
  user_account: 'user_account',
  user_profile: 'user_profile',
  user_points: 'user_points',
  points_redemption: 'points_redemption',
  points_redemption_items: 'points_redemption_items',
  coupon_table: 'coupon_table',
<<<<<<< HEAD
  user_coupon: 'user_coupon',
=======
>>>>>>> 9a59f75a485c1a24980ffc3127dc75599254f5c3
  organizer_account: 'organizer_account',
  organizer_profile: 'organizer_profile',
  organizer_reviews: 'organizer_reviews',
  event_table: 'event_table',
  ticket_holds: 'ticket_holds',
  ticket_type: 'ticket_type',
  event_attendees: 'event_attendees',
  transactions_table: 'transactions_table',
  voucher_table: 'voucher_table'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
